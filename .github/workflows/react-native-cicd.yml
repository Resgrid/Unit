name: React Native CI/CD

on:
  push:
    branches: [main, master]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'docs/**'
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: 'Build type to run'
        options:
          - dev
          - prod-apk
          - prod-aab
          - ios-dev
          - ios-adhoc
          - ios-prod
          - all
      platform:
        type: choice
        description: 'Platform to build'
        default: 'all'
        options:
          - android
          - ios
          - all

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
  EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
  EXPO_TEAM_ID: ${{ secrets.EXPO_TEAM_ID }}
  CREDENTIALS_JSON_BASE64: ${{ secrets.CREDENTIALS_JSON_BASE64 }}
  POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  UNIT_BASE_API_URL: ${{ secrets.UNIT_BASE_API_URL }}
  UNIT_CHANNEL_API_URL: ${{ secrets.UNIT_CHANNEL_API_URL }}
  UNIT_LOGGING_KEY: ${{ secrets.UNIT_LOGGING_KEY }}
  UNIT_MAPBOX_DLKEY: ${{ secrets.UNIT_MAPBOX_DLKEY }}
  UNIT_MAPBOX_PUBKEY: ${{ secrets.UNIT_MAPBOX_PUBKEY }}
  UNIT_SENTRY_DSN: ${{ secrets.UNIT_SENTRY_DSN }}
  UNIT_ANDROID_KS: ${{ secrets.UNIT_ANDROID_KS }}
  UNIT_GOOGLE_SERVICES: ${{ secrets.UNIT_GOOGLE_SERVICES }}
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  test:
    needs: check-skip
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'yarn'

      - name: 📦 Setup yarn cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🧪 Run Checks and Tests
        run: yarn check-all

  build-and-deploy:
    needs: test
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        platform: [android]
        include:
          - platform: ios
            runs-on: macos-latest
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    environment: RNBuild
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'yarn'

      - name: 📦 Setup yarn cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🏗 Install Fastlane
        run: |
          yarn global add fastlane

      - name: 📋 Run Fastlane Match
        run: |
          fastlane match development --app_identifier "${{ secrets.MATCH_UNIT_BUNDLEID }}" --git_url "${{ secrets.MATCH_GIT_URL }}" --git_basic_authorization "${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}"
          fastlane match adhoc --app_identifier "${{ secrets.MATCH_UNIT_BUNDLEID }}" --git_url "${{ secrets.MATCH_GIT_URL }}" --git_basic_authorization "${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}"
          fastlane match appstore --app_identifier "${{ secrets.MATCH_UNIT_BUNDLEID }}" --git_url "${{ secrets.MATCH_GIT_URL }}" --git_basic_authorization "${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}"

      - name: 📦 Install dependencies
        run: |
          yarn install --frozen-lockfile
          yarn global add eas-cli@latest

      - name: 📋 Create Credentials File
        run: |
          echo $CREDENTIALS_JSON_BASE64 | base64 -d > credentials.json

      - name: 📋 Create Android Keystore
        run: |
          echo $UNIT_ANDROID_KS | base64 -d > keystore.jks

      - name: 📋 Create Google Json File
        run: |
          echo $UNIT_GOOGLE_SERVICES | base64 -d > google-services.json

      - name: 📱 Setup EAS build cache
        uses: actions/cache@v3
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-build-local-

      - name: 🔄 Verify EAS CLI installation
        run: |
          echo "EAS CLI version:"
          eas --version

      - name: 📱 Build Development APK
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'dev' || github.event_name == 'push' && (matrix.platform == 'android' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android')
        run: |
          # Build with increased memory limit
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile development --local --non-interactive --output=./app-dev.apk
        env:
          NODE_ENV: development

      - name: 📱 Build Production APK
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'prod-apk' || github.event_name == 'push' && (matrix.platform == 'android' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile production-apk --local --non-interactive --output=./app-prod.apk
        env:
          NODE_ENV: production

      - name: 📱 Build Production AAB
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'prod-aab' || github.event_name == 'push' && (matrix.platform == 'android' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile production --local --non-interactive --output=./app-prod.aab
        env:
          NODE_ENV: production

      - name: 📱 Build iOS Development
        if: (github.event.inputs.buildType == 'all' || github.event_name == 'push' || github.event.inputs.buildType == 'ios-dev') && (matrix.platform == 'ios' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform ios --profile development --local --non-interactive --output=./app-ios-dev.app
        env:
          NODE_ENV: development

      - name: 📱 Build iOS Ad-Hoc
        if: (github.event.inputs.buildType == 'all' || github.event_name == 'push' || github.event.inputs.buildType == 'ios-adhoc') && (matrix.platform == 'ios' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform ios --profile internal --local --non-interactive --output=./app-ios-adhoc.app
        env:
          NODE_ENV: production

      - name: 📱 Build iOS Production
        if: (github.event.inputs.buildType == 'all' || github.event_name == 'push' || github.event.inputs.buildType == 'ios-prod') && (matrix.platform == 'ios' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform ios --profile production --local --non-interactive --output=./app-ios-prod.ipa
        env:
          NODE_ENV: production

      - name: 📦 Upload build artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: |
            ./app-dev.apk
            ./app-prod.apk
            ./app-prod.aab
            ./app-ios-dev.app
            ./app-ios-prod.ipa
          retention-days: 7
